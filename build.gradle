import org.apache.tools.ant.filters.ReplaceTokens

import java.nio.file.Files
import java.nio.file.Paths

plugins {
    id 'java'
    id 'com.github.johnrengelman.shadow' version "7.0.0"
    id 'java-library'
}

def allVersion = "0.0.1"

version allVersion

subprojects {
    apply plugin: 'com.github.johnrengelman.shadow'
    apply plugin: 'java-library'
    apply plugin: 'java'
    apply plugin: "maven-publish"

    version allVersion
    group 'io.ib67.serverutil'

    sourceCompatibility = "11"
    targetCompatibility = "11"
    repositories {
        mavenCentral()
        maven { url 'https://jitpack.io' }
        maven {
            url = "https://repo.codemc.io/repository/nms-local/"
        }
    }
    processResources {
        from(sourceSets.main.resources.srcDirs) {
            duplicatesStrategy DuplicatesStrategy.INCLUDE
            filter ReplaceTokens, tokens: [version: version]
        }
    }
    shadowJar{
        relocate "io.ib67.util", "io.ib67.serverutil.util"
        relocate "org.spongepowered.configurate", "io.ib67.serverutil.configurate"
        minimize()
        destinationDir(new File("../build/libs"))
        archiveBaseName.set("WithMyFriends")
    }
    publishing {
        repositories {
            maven {
                name = "GitHub"
                url = uri("https://maven.pkg.github.com/iceBear67/WithMyFriends")
                credentials {
                    username = project.findProperty("gpr.user") ?: System.getenv("USERNAME")
                    password = project.findProperty("gpr.key") ?: System.getenv("TOKEN")
                }
            }
        }
        publications {
            gpr(MavenPublication) {
                from(components.java)
            }
        }
    }
    test {
        useJUnitPlatform()
    }
    dependencies {
        compileOnly 'org.spigotmc:spigot:1.12.2-R0.1-20190527.155359-34'
        compileOnly 'org.projectlombok:lombok:1.18.20'
        annotationProcessor 'org.projectlombok:lombok:1.18.20'
        compileOnly 'com.google.auto.service:auto-service:1.0'
        annotationProcessor 'com.google.auto.service:auto-service:1.0'
    }

}
shadowJar {
    doLast {
        Files.deleteIfExists(Paths.get("./build/libs/WithMyFriends-$version-all.jar"))
    }
}