import org.apache.tools.ant.filters.ReplaceTokens

import java.nio.file.Files
import java.nio.file.Paths

plugins {
    id 'java'
    id 'com.github.johnrengelman.shadow' version "7.0.0"
    id 'java-library'
}

def allVersion = "0.0.1"

version allVersion

subprojects {
    apply plugin: 'com.github.johnrengelman.shadow'
    apply plugin: 'java-library'
    apply plugin: 'java'

    version allVersion
    group 'io.ib67.serverutil'

    sourceCompatibility = "11"
    targetCompatibility = "11"
    repositories {
        mavenCentral()
        maven { url 'https://jitpack.io' }
        maven {
            url = "https://repo.codemc.io/repository/nms-local/"
        }
    }
    processResources {
        from(sourceSets.main.resources.srcDirs) {
            duplicatesStrategy DuplicatesStrategy.INCLUDE
            filter ReplaceTokens, tokens: [version: version]
        }
    }
    shadowJar{
        relocate "io.ib67.util", "io.ib67.serverutil.util"
        relocate "org.spongepowered.configurate", "io.ib67.serverutil.configurate"
        minimize()
        destinationDir(new File("../build/libs"))
        archiveBaseName.set("WithMyFriends")
    }
    afterEvaluate {
    }
    test {
        useJUnitPlatform()
    }
    dependencies {
        compileOnly 'org.spigotmc:spigot-api:1.16.5-R0.1-20210611.090634-18'
        compileOnly 'org.projectlombok:lombok:1.18.20'
        annotationProcessor 'org.projectlombok:lombok:1.18.20'
        compileOnly 'com.google.auto.service:auto-service:1.0'
        annotationProcessor 'com.google.auto.service:auto-service:1.0'
    }
}
shadowJar {
    doLast {
        Files.deleteIfExists(Paths.get("./build/libs/WithMyFriends-$version-all.jar"))
    }
}